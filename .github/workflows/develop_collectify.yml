# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy to Azure Web App - collectify

on:
  push:
    branches:
      - develop
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    # Set up Python for backend
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    # Set up Azure CLI
    - name: Set up Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Install backend dependencies
    - name: Install backend dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Create deployment package
    - name: Create deployment package
      run: |
        # Prepare deployment folder
        mkdir -p deployment
        
        # Copy backend files to deployment
        cp -r backend/* deployment/
        
        # Copy the startup script
        cp startup.sh deployment/
        chmod +x deployment/startup.sh
        
        # Remove unnecessary files
        find deployment -type d -name "__pycache__" -exec rm -rf {} +
        find deployment -type d -name "node_modules" -exec rm -rf {} +
        rm -f deployment/Dockerfile*
        
        # Create zip file
        cd deployment
        zip -r ../collectify-deployment.zip .

    # Deploy to Azure Web App
    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'collectify'
        # slot-name: 'production'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_d7b87d5b242444a9bc2ab07fa9a62a6b }}
        package: './collectify-deployment.zip'
        
    # Configure app settings using direct Azure CLI commands
    # - name: Configure App Settings with Azure CLI
    #   run: |
    #     az webapp config appsettings set --name collectify --resource-group collectify-rg --settings \
    #       FLASK_APP=app.py \
    #       FLASK_ENV=production \
    #       FLASK_DEBUG=1 \
    #       FLASK_RUN_HOST=0.0.0.0 \
    #       SCM_DO_BUILD_DURING_DEPLOYMENT=true \
    #       COLLECTIFY_DB_PATH=/home/data/collectibles.db \
    #       WEBSITE_RUN_FROM_PACKAGE=1 \
    #       PYTHONPATH=/home/site/wwwroot \
    #       WEBSITE_HTTPLOGGING_RETENTION_DAYS=7 \
    #       STARTUP_COMMAND="gunicorn --bind=0.0.0.0:8000 --timeout=600 --workers=4 --log-level=debug app:app" \
    #       FLASK_LOG_LEVEL=DEBUG \
    #       CORS_ORIGINS="https://black-sea-02a411d03.3.azurestaticapps.net,http://localhost:3000" \
    #       JWT_SECRET_KEY="${{ secrets.JWT_SECRET_KEY }}"
    
    # # Configure Linux-specific startup command
    # - name: Configure Linux App Service startup command
    #   run: |
    #     az webapp config set --name collectify --resource-group collectify-rg --startup-file "startup.sh"